<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="DSFormulas" targetNamespace="http://tempuri.org/DSFormulas.xsd" xmlns:mstns="http://tempuri.org/DSFormulas.xsd" xmlns="http://tempuri.org/DSFormulas.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="NominaConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="NominaConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.Nomina.Properties.Settings.GlobalReference.Default.NominaConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="T_FormulaTableAdapter" GeneratorDataComponentClassName="T_FormulaTableAdapter" Name="T_Formula" UserDataComponentName="T_FormulaTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="NominaConnectionString (Settings)" DbObjectName="Nomina.dbo.T_Formula" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[T_Formula] WHERE (([idformula] = @Original_idformula) AND ([nameformula] = @Original_nameformula))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idformula" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idformula" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_nameformula" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="nameformula" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[T_Formula] ([nameformula], [valueformula]) VALUES (@nameformula, @valueformula);
SELECT idformula, nameformula, valueformula FROM T_Formula WHERE (idformula = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@nameformula" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="nameformula" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@valueformula" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="valueformula" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT idformula, nameformula, valueformula FROM T_Formula</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[T_Formula] SET [nameformula] = @nameformula, [valueformula] = @valueformula WHERE (([idformula] = @Original_idformula) AND ([nameformula] = @Original_nameformula));
SELECT idformula, nameformula, valueformula FROM T_Formula WHERE (idformula = @idformula)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@nameformula" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="nameformula" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@valueformula" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="valueformula" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idformula" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idformula" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_nameformula" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="nameformula" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="idformula" ColumnName="idformula" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@idformula" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="idformula" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="idformula" DataSetColumn="idformula" />
              <Mapping SourceColumn="nameformula" DataSetColumn="nameformula" />
              <Mapping SourceColumn="valueformula" DataSetColumn="valueformula" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="DSFormulas" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="true" msprop:Generator_DataSetName="DSFormulas" msprop:Generator_UserDSName="DSFormulas">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="T_Formula" msprop:Generator_TableClassName="T_FormulaDataTable" msprop:Generator_TableVarName="tableT_Formula" msprop:Generator_TablePropName="T_Formula" msprop:Generator_RowDeletingName="T_FormulaRowDeleting" msprop:Generator_UserTableName="T_Formula" msprop:Generator_RowChangingName="T_FormulaRowChanging" msprop:Generator_RowEvHandlerName="T_FormulaRowChangeEventHandler" msprop:Generator_RowDeletedName="T_FormulaRowDeleted" msprop:Generator_RowEvArgName="T_FormulaRowChangeEvent" msprop:Generator_RowChangedName="T_FormulaRowChanged" msprop:Generator_RowClassName="T_FormulaRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="idformula" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnidformula" msprop:Generator_ColumnPropNameInRow="idformula" msprop:Generator_ColumnPropNameInTable="idformulaColumn" msprop:Generator_UserColumnName="idformula" type="xs:int" />
              <xs:element name="nameformula" msprop:Generator_ColumnVarNameInTable="columnnameformula" msprop:Generator_ColumnPropNameInRow="nameformula" msprop:Generator_ColumnPropNameInTable="nameformulaColumn" msprop:Generator_UserColumnName="nameformula">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="valueformula" msprop:Generator_ColumnVarNameInTable="columnvalueformula" msprop:Generator_ColumnPropNameInRow="valueformula" msprop:Generator_ColumnPropNameInTable="valueformulaColumn" msprop:Generator_UserColumnName="valueformula">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="DataColumn1" msprop:Generator_ColumnVarNameInTable="columnDataColumn1" msprop:Generator_ColumnPropNameInRow="DataColumn1" msprop:Generator_ColumnPropNameInTable="DataColumn1Column" msprop:Generator_UserColumnName="DataColumn1" type="xs:string" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:T_Formula" />
      <xs:field xpath="mstns:idformula" />
    </xs:unique>
  </xs:element>
</xs:schema>